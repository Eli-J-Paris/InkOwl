@model Nest
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">

<form method="post" action="/nest/update/@Model.Id/@Model.Articles[0].Id/@Model.Notes[0].Id">
    <input type="hidden" id="articleContent" name="articleContent" />
    <input type="hidden" id="noteContent" name="noteContent" />

    <button type="submit">Save</button>
</form>
<h1>Single Nest View for @Model.Title</h1>
<div class="nest-container">


    <div class="article">
        <h1>article</h1>
        <button class="btn btn-open" data-modal-id="">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-globe" viewBox="0 0 16 16">
                <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z" />
            </svg>
        </button>
        <div id="article-editor" style="">
            @*later will be active int*@
            @Html.Raw(Model.Articles[0].Content)
        </div>
        <section class="modal hidden" id="modal">
            <div class="flex">
                <button class="btn-close">⨉</button>
            </div>
            <div>
                <form method="post" action="/article/@Model.Id/@Model.Articles[0].Id/upload">
                    <label for="url">URL</label>
                    <input type="text" id="url" name="url" />
                    <button type="submit">Upload Article</button>
                </form>
            </div>

        </section>
        <div class="overlay hidden"></div>
    </div>


    <div class="notes">
        <h1>Notes</h1>
        <div id="note-editor" style="">
            @Html.Raw(Model.Notes[0].Content)
        </div>
    </div>
</div>




<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script>
    var toolbarOptions = [
        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
        ['blockquote', 'code-block'],

        [{ 'header': 1 }, { 'header': 2 }],               // custom button values
        [{ 'list': 'ordered' }, { 'list': 'bullet' }],
        [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
        [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
        [{ 'direction': 'rtl' }],                         // text direction

        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
        [{ 'font': [] }],
        [{ 'align': [] }],

        ['clean']                                         // remove formatting button
    ];



    document.querySelector('form').addEventListener('submit', function (e) {
        e.preventDefault();
        var articleContent = quillArticle.root.innerHTML;
        var noteContent = quillNote.root.innerHTML;
        document.getElementById('articleContent').value = articleContent;
        document.getElementById('noteContent').value = noteContent;
        this.submit(); // Submit the form with the editor content
    });

    var quillArticle = new Quill('#article-editor', {
        modules: {
            toolbar: toolbarOptions
        },
        placeholder: 'Compose an epic...',
        theme: 'snow'// 'bubble'
    });

    var quillNote = new Quill('#note-editor', {
        modules: {
            toolbar: toolbarOptions
        },
        placeholder: 'Compose an epic...',
        theme: 'snow' /*'bubble'*/
    });

</script>

<style>

    .modal {
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: 0.4rem;
        width: 450px;
        padding: 1.3rem;
        min-height: 250px;
        max-height: 250px;
        position: fixed;
        z-index: 2;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        border: 1px solid #ddd;
        border-radius: 15px;
    }

        .modal .flex {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .modal input {
            padding: 0.7rem 1rem;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 0.9em;
        }

        .modal p {
            font-size: 0.9rem;
            color: #777;
            margin: 0.4rem 0 0.2rem;
        }

    button {
        cursor: pointer;
        border: none;
        font-weight: 600;
    }

    .btn {
        display: inline-block;
        padding: 0.8rem 1.4rem;
        font-weight: 700;
        background-color: black;
        color: white;
        border-radius: 5px;
        text-align: center;
        font-size: 1em;
    }

    /* .btn-open {
                            position: absolute;
                            bottom: 150px;
                        }*/

    .btn-close {
        transform: translate(10px, -20px);
        padding: 0.5rem 0.7rem;
        background: #eee;
        border-radius: 50%;
    }

    .overlay {
        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(3px);
        z-index: 1;
    }

    .hidden {
        display: none;
    }
</style>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        const openModalBtns = document.querySelectorAll(".btn-open");
        const modals = document.querySelectorAll(".modal");
        const overlay = document.querySelector(".overlay");
        const closeModalBtn = document.querySelector(".btn-close");

        // Open modal function
        const openModal = function (modalId) {
            const modal = document.getElementById("modal");
            modal.classList.remove("hidden");
            overlay.classList.remove("hidden");

        };

        // Close modal function
        const closeModal = function (modalId) {
            const modal = document.getElementById("modal");
            modal.classList.add("hidden");
            overlay.classList.add("hidden");
        };
        // close the modal when the close button and overlay is clicked
        closeModalBtn.addEventListener("click", closeModal);
        overlay.addEventListener("click", closeModal);

        // close modal when the Esc key is pressed
        document.addEventListener("keydown", function (e) {
            if (e.key === "Escape" && !modal.classList.contains("hidden")) {
                closeModal();
            }
        });


        // Add event listeners to open and close each modal
        openModalBtns.forEach((btn, index) => {
            btn.addEventListener("click", () => openModal(index));
        });

        modals.forEach((modal, index) => {
            modal.querySelector(".btn-close").addEventListener("click", () => closeModal(index));
        });
    });
</script>